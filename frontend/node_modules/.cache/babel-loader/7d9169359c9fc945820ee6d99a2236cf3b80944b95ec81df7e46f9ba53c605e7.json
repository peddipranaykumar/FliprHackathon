{"ast":null,"code":"var _jsxFileName = \"D:\\\\Flipr\\\\frontend\\\\src\\\\components\\\\Podcasts\\\\Podcasts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport \"./Podcasts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Podcasts = () => {\n  _s();\n  const [podcasts, setPodcasts] = useState([]);\n  const sendRequest = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/podcast/');\n      const data = await res.data;\n      if (data && data.podcasts) {\n        return data;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    sendRequest().then(data => setPodcasts(data.podcasts));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: podcasts.map(podcast => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"podcast-container\",\n        children: podcasts.map(podcast => /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 345\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: podcast.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: podcast.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Podcasts, \"YZG9jJn3dHPKwHuzr14dOAwcgTo=\");\n_c = Podcasts;\nexport default Podcasts;\nvar _c;\n$RefreshReg$(_c, \"Podcasts\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","CardActions","CardContent","Button","Typography","jsxDEV","_jsxDEV","Podcasts","_s","podcasts","setPodcasts","sendRequest","res","get","data","err","console","log","then","children","map","podcast","className","sx","maxWidth","gutterBottom","variant","component","name","fileName","_jsxFileName","lineNumber","columnNumber","color","description","size","_c","$RefreshReg$"],"sources":["D:/Flipr/frontend/src/components/Podcasts/Podcasts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport \"./Podcasts.css\"\r\n\r\nconst Podcasts = () => {\r\n  const [podcasts, setPodcasts] = useState([]);\r\n\r\n  const sendRequest = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/podcast/');\r\n      const data = await res.data;\r\n      if (data && data.podcasts) {\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    sendRequest().then((data) => setPodcasts(data.podcasts));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        podcasts.map((podcast) => (\r\n          <div>\r\n\r\n\r\n            {/*<h1>{podcast.name}</h1>\r\n            {\r\n              podcast.type === \"video\" ? (\r\n                <embed src={podcast.file} type=\"\" />\r\n              ) : (\r\n                <audio controls>\r\n                  <source src={podcast.file} type=\"audio/mpeg\" />\r\n                </audio>\r\n              )\r\n            }*/}\r\n\r\n<div className=\"podcast-container\">\r\n      {podcasts.map(podcast => (\r\n        <Card sx={{ maxWidth: 345 }}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {podcast.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {podcast.description}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\">View</Button>\r\n            <Button size=\"small\">Remove</Button>\r\n          </CardActions>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n\r\n\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Podcasts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}