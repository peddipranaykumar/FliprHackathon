{"ast":null,"code":"var _jsxFileName = \"D:\\\\Flipr\\\\frontend\\\\src\\\\components\\\\Podcasts\\\\Podcasts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport \"./Podcasts.css\";\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Podcasts = () => {\n  _s();\n  const [podcasts, setPodcasts] = useState([]);\n  const sendRequest = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/podcast/');\n      const data = await res.data;\n      if (data && data.podcasts) {\n        return data;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    sendRequest().then(data => setPodcasts(data.podcasts));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: podcasts.map(podcast => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"podcast-container\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          paddingTop: '150px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: \"From Serial Killers to Demons\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: \"Podcast from Ranveer Allhabadia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Podcasts, \"YZG9jJn3dHPKwHuzr14dOAwcgTo=\");\n_c = Podcasts;\nexport default Podcasts;\nvar _c;\n$RefreshReg$(_c, \"Podcasts\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Row","Col","Card","jsxDEV","_jsxDEV","Podcasts","_s","podcasts","setPodcasts","sendRequest","res","get","data","err","console","log","then","children","map","podcast","className","style","paddingTop","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","_c","$RefreshReg$"],"sources":["D:/Flipr/frontend/src/components/Podcasts/Podcasts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport \"./Podcasts.css\"\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nconst Podcasts = () => {\r\n  const [podcasts, setPodcasts] = useState([]);\r\n\r\n  const sendRequest = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/podcast/');\r\n      const data = await res.data;\r\n      if (data && data.podcasts) {\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    sendRequest().then((data) => setPodcasts(data.podcasts));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        podcasts.map((podcast) => (\r\n          <div className=\"podcast-container\">\r\n\r\n\r\n            {/*<h1>{podcast.name}</h1>\r\n            {\r\n              podcast.type === \"video\" ? (\r\n                <embed src={podcast.file} type=\"\" />\r\n              ) : (\r\n                <audio controls>\r\n                  <source src={podcast.file} type=\"audio/mpeg\" />\r\n                </audio>\r\n              )\r\n            }*/}\r\n\r\n            <Container style={{ paddingTop: '150px' }}>\r\n              <div className='row'>\r\n                <div className='col-4'>\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Card.Title>From Serial Killers to Demons</Card.Title>\r\n                      <Card.Text>Podcast from Ranveer Allhabadia</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </Container>\r\n\r\n\r\n\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Podcasts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;MAC7D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI;MAC3B,IAAIA,IAAI,IAAIA,IAAI,CAACL,QAAQ,EAAE;QACzB,OAAOK,IAAI;MACb;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAGDjB,SAAS,CAAC,MAAM;IACda,WAAW,EAAE,CAACO,IAAI,CAAEJ,IAAI,IAAKJ,WAAW,CAACI,IAAI,CAACL,QAAQ,CAAC,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAAa,QAAA,EAEIV,QAAQ,CAACW,GAAG,CAAEC,OAAO,iBACnBf,OAAA;MAAKgB,SAAS,EAAC,mBAAmB;MAAAH,QAAA,eAchCb,OAAA,CAACL,SAAS;QAACsB,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAQ,CAAE;QAAAL,QAAA,eACxCb,OAAA;UAAKgB,SAAS,EAAC,KAAK;UAAAH,QAAA,eAClBb,OAAA;YAAKgB,SAAS,EAAC,OAAO;YAAAH,QAAA,eACpBb,OAAA,CAACF,IAAI;cAAAe,QAAA,eACHb,OAAA,CAACF,IAAI,CAACqB,IAAI;gBAAAN,QAAA,gBACRb,OAAA,CAACF,IAAI,CAACsB,KAAK;kBAAAP,QAAA,EAAC;gBAA6B;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAa,eACtDxB,OAAA,CAACF,IAAI,CAAC2B,IAAI;kBAAAZ,QAAA,EAAC;gBAA+B;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAY;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAC5C;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACP;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEV,CAAC;AAACtB,EAAA,CA1DID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}