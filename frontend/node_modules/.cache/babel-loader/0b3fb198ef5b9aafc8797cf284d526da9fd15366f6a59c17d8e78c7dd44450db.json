{"ast":null,"code":"var _jsxFileName = \"D:\\\\Flipr\\\\frontend\\\\src\\\\components\\\\Podcasts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Podcasts = () => {\n  _s();\n  const [podcasts, setPodcasts] = useState([]);\n  const sendRequest = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/podcast/');\n      const data = await res.data;\n      if (data && data.podcasts) {\n        return data;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    sendRequest().then(data => setPodcasts(data.podcasts));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: podcasts.map(podcast => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: podcast.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"embed\", {\n        src: podcast.file,\n        type: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: \"https://res.cloudinary.com/dabvvbjsm/video/upload/v1682177985/xreui89qisyj8w6y9vts.mp3\",\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Podcasts, \"YZG9jJn3dHPKwHuzr14dOAwcgTo=\");\n_c = Podcasts;\nexport default Podcasts;\nvar _c;\n$RefreshReg$(_c, \"Podcasts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Podcasts","_s","podcasts","setPodcasts","sendRequest","res","get","data","err","console","log","then","children","map","podcast","name","fileName","_jsxFileName","lineNumber","columnNumber","src","file","type","controls","_c","$RefreshReg$"],"sources":["D:/Flipr/frontend/src/components/Podcasts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Podcasts = () => {\r\n  const [podcasts, setPodcasts] = useState([]);\r\n\r\n  const sendRequest = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/podcast/');\r\n      const data = await res.data;\r\n      if (data && data.podcasts) {\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    sendRequest().then((data) => setPodcasts(data.podcasts));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        podcasts.map((podcast) => (\r\n          <div>\r\n            <h1>{podcast.name}</h1>\r\n            <embed src={podcast.file} type=\"\" />\r\n            <audio controls>\r\n            <source src=\"https://res.cloudinary.com/dabvvbjsm/video/upload/v1682177985/xreui89qisyj8w6y9vts.mp3\" type=\"audio/mpeg\" />\r\n            </audio>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Podcasts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC;MAC7D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI;MAC3B,IAAIA,IAAI,IAAIA,IAAI,CAACL,QAAQ,EAAE;QACzB,OAAOK,IAAI;MACb;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAGDb,SAAS,CAAC,MAAM;IACdS,WAAW,EAAE,CAACO,IAAI,CAAEJ,IAAI,IAAKJ,WAAW,CAACI,IAAI,CAACL,QAAQ,CAAC,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAAa,QAAA,EAEIV,QAAQ,CAACW,GAAG,CAAEC,OAAO,iBACnBf,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKE,OAAO,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACvBpB,OAAA;QAAOqB,GAAG,EAAEN,OAAO,CAACO,IAAK;QAACC,IAAI,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpCpB,OAAA;QAAOwB,QAAQ;QAAAX,QAAA,eACfb,OAAA;UAAQqB,GAAG,EAAC,wFAAwF;UAACE,IAAI,EAAC;QAAY;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEV,CAAC;AAAClB,EAAA,CAnCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}