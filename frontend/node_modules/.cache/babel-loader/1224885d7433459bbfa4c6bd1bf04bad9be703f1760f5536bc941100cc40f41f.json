{"ast":null,"code":"var _jsxFileName = \"D:\\\\Flipr\\\\frontend\\\\src\\\\components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions } from '../../store';\nimport \"./Header.css\";\nimport { Nav, Navbar, Button } from 'react-bootstrap';\nimport \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  // Check for login state in local storage or cookies and dispatch the appropriate action to update the state in Redux\n  useEffect(() => {\n    const loginState = localStorage.getItem('loginState');\n    if (loginState === 'true') {\n      dispatch(authActions.login());\n    }\n  }, [dispatch]);\n\n  // Save login state to local storage or cookies when it changes in Redux\n  useEffect(() => {\n    localStorage.setItem('loginState', isLoggedIn);\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n      href: \"#home\",\n      children: \"Navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Nav, {\n      className: \"me-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n        href: \"#home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n        href: \"#features\",\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n        href: \"#pricing\",\n        children: \"Pricing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Button, {\n      href: \"/auth\",\n      children: \"Signup/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => dispatch(authActions.logout()),\n      LinkComponent: Link,\n      to: \"/auth\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"B72vOd2vRL54muTOp7MAOIlm9zk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Link","useDispatch","useSelector","authActions","Nav","Navbar","Button","jsxDEV","_jsxDEV","Header","_s","dispatch","isLoggedIn","state","auth","loginState","localStorage","getItem","login","setItem","bg","variant","children","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","logout","LinkComponent","to","_c","$RefreshReg$"],"sources":["D:/Flipr/frontend/src/components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../store';\r\nimport \"./Header.css\"\r\nimport {  Nav, Navbar,Button } from 'react-bootstrap';\r\nimport \"./\"\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\r\n\r\n\r\n  // Check for login state in local storage or cookies and dispatch the appropriate action to update the state in Redux\r\n  useEffect(() => {\r\n    const loginState = localStorage.getItem('loginState');\r\n    if (loginState === 'true') {\r\n      dispatch(authActions.login());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // Save login state to local storage or cookies when it changes in Redux\r\n  useEffect(() => {\r\n    localStorage.setItem('loginState', isLoggedIn);\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n\r\n\r\n      {isLoggedIn && <Nav className=\"me-auto\">\r\n        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n        <Nav.Link href=\"#features\">Features</Nav.Link>\r\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n      </Nav>\r\n      }\r\n\r\n      {\r\n        !isLoggedIn &&\r\n        <Button\r\n          href=\"/auth\"\r\n        >\r\n          Signup/Login\r\n        </Button>\r\n      }\r\n\r\n      {\r\n        isLoggedIn &&\r\n        <Button\r\n          onClick={() => dispatch(authActions.logout())}\r\n          LinkComponent={Link} to=\"/auth\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      }\r\n    </Navbar >\r\n  )\r\n}\r\n\r\nexport default Header\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}