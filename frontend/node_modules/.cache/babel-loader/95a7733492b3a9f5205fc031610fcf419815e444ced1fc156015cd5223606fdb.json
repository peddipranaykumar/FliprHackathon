{"ast":null,"code":"var _jsxFileName = \"D:\\\\Flipr\\\\frontend\\\\src\\\\components\\\\Podcasts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Podcasts = () => {\n  _s();\n  const [podcasts, setPodcasts] = useState([]);\n  const sendRequest = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/podcast/');\n      const data = await res.data;\n      if (data && data.podcasts) {\n        return data;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    sendRequest().then(data => setPodcasts(data.podcasts));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: podcasts.map(podcast => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 345\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          sx: {\n            height: 140\n          },\n          image: \"/static/images/cards/contemplative-reptile.jpg\",\n          title: \"green iguana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: \"Lizard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, podcast.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Podcasts, \"YZG9jJn3dHPKwHuzr14dOAwcgTo=\");\n_c = Podcasts;\nexport default Podcasts;\nvar _c;\n$RefreshReg$(_c, \"Podcasts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Podcasts","_s","podcasts","setPodcasts","sendRequest","res","get","data","err","console","log","then","children","map","podcast","Card","sx","maxWidth","CardMedia","height","image","title","fileName","_jsxFileName","lineNumber","columnNumber","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","id","_c","$RefreshReg$"],"sources":["D:/Flipr/frontend/src/components/Podcasts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Podcasts = () => {\r\n  const [podcasts, setPodcasts] = useState([]);\r\n\r\n  const sendRequest = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/podcast/');\r\n      const data = await res.data;\r\n      if (data && data.podcasts) {\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    sendRequest().then((data) => setPodcasts(data.podcasts));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        podcasts.map((podcast) => (\r\n          <div key={podcast.id}>\r\n\r\n\r\n            {/*<h1>{podcast.name}</h1>\r\n            {\r\n              podcast.type === \"video\" ? (\r\n                <embed src={podcast.file} type=\"\" />\r\n              ) : (\r\n                <audio controls>\r\n                  <source src={podcast.file} type=\"audio/mpeg\" />\r\n                </audio>\r\n              )\r\n            }*/}\r\n\r\n            <Card sx={{ maxWidth: 345 }}>\r\n              <CardMedia\r\n                sx={{ height: 140 }}\r\n                image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n                title=\"green iguana\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Lizards are a widespread group of squamate reptiles, with over 6,000\r\n                  species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\">Share</Button>\r\n                <Button size=\"small\">Learn More</Button>\r\n              </CardActions>\r\n            </Card>\r\n\r\n\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Podcasts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}